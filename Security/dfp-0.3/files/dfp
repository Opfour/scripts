#!/bin/bash

# written by benjamin cathey 20090320
# a replacement for DoS deflate which seems to work great and to allow and ip allow list

# REQUIRES APF version version 9.6 (with the -u option)

source /etc/dfp/conf.dfp

IFS=$'\n'

ban_ips(){

  sysips=$(/sbin/ifconfig | sed -n 's/.*inet addr:\([^\ ]*\).*$/\1/p')

  parsed_sysips=$(echo $sysips | sed 's/\ /\|/g')

  udate=$(date +%s)
  rdate=$(date +%Y%m%d_%H:%M)

  allowedips=$(cat /etc/dfp/allowed.ips| awk '!/^#/')
  
  if [ "$allowedips" ]
  then
    parsed_allowedips=$(echo $allowedips | sed 's/\ /\|/g')
    ignoreips="$parsed_sysips|$parsed_allowedips"
  else
    ignoreips=$parsed_sysips
  fi

  bannedips=$(cat /etc/dfp/banned.ips | cut -d':' -f2)
  if [ "$bannedips" ]
  then
    parsed_bannedips=$(echo $bannedips | sed 's/\ /\|/g')
    ignoreips="$ignoreips|$parsed_bannedips"
  fi

  connections=$(/bin/netstat -an | awk '{print $5}' | awk '!/'$ignoreips'/' | sed -n 's/^[^0-9]*\([0-9^]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\):.*/\1/p' | grep -v 0.0.0.0 | sort | uniq -c | sort -nr | head  | sed 's/^\ *//'|sed 's/\ /:/g')
  for connection in $connections
  do
    count=$(echo $connection | cut -d':' -f1)
    ip=$(echo $connection | cut -d':' -f2)
    if [ "$count" -gt "$threshold" ]
    then
      echo "$rdate $udate:$count:$ip" >> $log
      /usr/local/sbin/apf -d $ip {dfp_"$count"_connections}
      echo "$udate:$ip" >> /etc/dfp/banned.ips
      echo "$count:$ip" >> /tmp/banlist
    fi
  done
  
  if [ -e "/tmp/banlist" ]
  then
    banlist=$(cat /tmp/banlist)
    rm -f /tmp/banlist
  fi
}

unban_ips(){
  currentbans=$(cat /etc/dfp/banned.ips)
  ubtime=$(( $udate - $bantime ))
  for ban in $currentbans
  do
    btime=$(echo $ban | cut -d':' -f1)
    
    ip=$(echo $ban | cut -d':' -f2)
    if [ "$btime" -lt "$ubtime" ]
    then
      /usr/local/sbin/apf -u $ip
      sed -i '/'$ip'/d' /etc/dfp/banned.ips
    fi
  done
}

ban_ips
unban_ips

instant_mail(){
  if [ -n "$banlist" ]
  then
    echo `date` >> $alertletter
    echo >> $alertletter
    echo "The following IP(s) have been banned for $bantime seconds for exceeding the connection threshold of $threshold on `hostname`.  This was done by the program 'DoS Firewall Protection'." >> $alertletter
    echo  >> $alertletter
    printf "COUNT       IP ADDRESS\n"  >> $alertletter
    echo "----------------------"  >> $alertletter
    for line in $banlist
    do
      count=$(echo $line | cut -d':' -f1)
      ip=$(echo $line | cut -d ':' -f2)
      printf "%-5s%17s\n" $count $ip  >> $alertletter
    done

    cat $alertletter | mail -s "DoS report from `hostname`" $email
    sleep 15
    rm -f $alertletter
  fi
}

summary_mail(){
  lcount=0
  if [ -e "$stime" ]
  then
    otime=$(cat $stime)
    astime=$(($otime + 21600))
    if [ "$udate" -ge "$astime" ]
    then 
      echo $udate > $stime
      echo `date` >> $alertletter
      echo >> $alertletter
      echo "The following IP(s) have been banned within the last 6 hours for exceeding the connection threshold of $threshold on `hostname`.  This was done by the program 'DoS Firewall Protection'." >> $alertletter
      echo  >> $alertletter
      printf "TIME           COUNT       IP ADDRESS\n"  >> $alertletter
      echo "-------------------------------------"  >> $alertletter
      loglist=$(cat /var/log/dfp.log)
      for line in $loglist
      do
        bannedtime=$(echo $line | awk '{print $1}')
        sdate=$(echo $line | awk '{print $2}'| cut -d':' -f1)
        count=$(echo $line | awk '{print $2}' | cut -d':' -f2)
        ip=$(echo $line | awk '{print $2}' | cut -d':' -f3)
        if [ $sdate -gt $otime ] 
        then
          lcount=$(($lcount + 1)) 
          printf "%-15s%5s%17s\n" $bannedtime $count $ip  >> $alertletter
        fi
      done
    fi
  else
    echo $udate > $stime
  fi

  if [ $lcount -gt 0 ]
  then
    cat $alertletter | mail -s "DoS summary/report from `hostname`" $email
  fi
  sleep 15
  rm -f $alertletter
}
 
if [ "$alert" = "1" ]
then
  instant_mail
fi

if [ "$alert" = "2" ]
then
  summary_mail
fi 

IFS=$' '
